<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Scrutz</name>
    </assembly>
    <members>
        <member name="M:Scrutz.Controllers.AccountSettingController.GetAccountSettings(System.Int32)">
            <summary>
            Get account settings according to an identifier.
            </summary>
            <returns>Get Account Settings details </returns>
        </member>
        <member name="M:Scrutz.Controllers.AccountSettingController.PostAccounSettings(Scrutz.Model.DTO.AccountSettingDTO)">
            <summary>
            Saves a new Account Settings.
            </summary>
            <param name="AccountSettings">AccountSetting  data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:Scrutz.Controllers.AccountSettingController.EditAccountSettings(System.Int32,Scrutz.Model.DTO.AccountSettingDTO)">
            <summary>
            Updates an existing account settings according to an identifier.
            </summary>
            <param name="id">Campaign identifier.</param>
            <param name="AccountSettings">Updated campaign data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:Scrutz.Controllers.AccountSettingController.UploadImage(System.Int32,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload an Image.
            </summary>
            <param name="id">Campaign identifier.</param>
            <param name="AccountSettings">Updated campaign data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:Scrutz.Controllers.AccountSettingController.GetCompanyLogo(System.Int32)">
            <summary>
            Get company Logo according to an identifier.
            </summary>
            <returns>Get company logo </returns>
        </member>
        <member name="M:Scrutz.Controllers.CampaignController.GetCampaigns(Scrutz.Model.PageQuery)">
            <summary>
            Lists all campaigns Paged.
            </summary>
            <returns>List of campaigns.</returns>
        </member>
        <member name="M:Scrutz.Controllers.CampaignController.GetCampaigns">
            <summary>
            Lists all campaigns .
            </summary>
            <returns>List of campaigns.</returns>
        </member>
        <member name="M:Scrutz.Controllers.CampaignController.PostCampaign(Scrutz.Model.DTO.CampaignDTO)">
            <summary>
            Saves a new campaign.
            </summary>
            <param name="campaign">Campaign data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:Scrutz.Controllers.CampaignController.PutCampaign(System.Int32,Scrutz.Model.DTO.CampaignDTO)">
            <summary>
            Updates an existing campaign according to an identifier.
            </summary>
            <param name="id">Campaign identifier.</param>
            <param name="campaign">Updated campaign data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:Scrutz.Controllers.CampaignController.DeleteCampaign(System.Int32)">
            <summary>
            Deletes a given campaign according to an identifier.
            </summary>
            <param name="id">Campaign identifier.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:Scrutz.Controllers.CampaignController.GetCampaign(System.Int32)">
            <summary>
            Get campaign details according to an identifier.
            </summary>
            <returns>Get campaign details </returns>
        </member>
        <member name="M:Scrutz.Controllers.CampaignController.UpdateActiveStatus(System.Int32,Scrutz.Model.ActiveStatus)">
            <summary>
            Update Active Status.
            </summary>
            <returns>Response for the request</returns>
        </member>
        <member name="M:Scrutz.Controllers.InfluencerController.GetInfluencer">
            <summary>
            Lists all Influencers.
            </summary>
            <returns>List of Influencers.</returns>
        </member>
        <member name="M:Scrutz.Controllers.InfluencerController.PostInfluencer(Scrutz.Model.DTO.InfluencerDTO)">
            <summary>
            Saves a new influencer.
            </summary>
            <param name="influencer">Campaign data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:Scrutz.Controllers.InfluencerController.PutInfluencer(System.Int32,Scrutz.Model.DTO.InfluencerDTO)">
            <summary>
            Updates an existing influencer according to an identifier.
            </summary>
            <param name="id">Influencer identifier.</param>
            <param name="influencer">Updated Influencer data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:Scrutz.Controllers.InfluencerController.DeleteInfluencer(System.Int32)">
            <summary>
            Deletes a given influencer according to an identifier.
            </summary>
            <param name="id">Influencer identifier.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:Scrutz.Controllers.InfluencerController.GetCampaign(System.Int32)">
            <summary>
            Get Influencer details according to an identifier.
            </summary>
            <returns>Get Influencer details </returns>
        </member>
        <member name="M:Scrutz.Controllers.TweetController.GetTweetsById(System.Int32)">
            <summary>
            Lists all Tweet Identifed with a campaign Id.
            </summary>
            <returns>List of campaigns.</returns>
        </member>
        <member name="M:Scrutz.Controllers.TweetController.GetTweetsInformationById(System.Int32)">
            <summary>
            Lists all TweetInformation Identifed with a campaign Id .
            </summary>
            <returns>List of campaigns.</returns>
        </member>
        <member name="M:Scrutz.Controllers.TweetController.GetCampaigns(Scrutz.Model.PageQuery,System.Int32)">
            <summary>
            Lists all tweets by campaignId Paged.
            </summary>
            <returns>List of Tweets.</returns>
        </member>
        <member name="T:Scrutz.Migrations.Initial">
            <inheritdoc />
        </member>
        <member name="M:Scrutz.Migrations.Initial.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Scrutz.Migrations.Initial.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Scrutz.Migrations.Initial.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Scrutz.Service.Communication.AccountSettingResponse.#ctor(Scrutz.Model.AccountSetting)">
            <summary>
            Creates a success response.
            </summary>
            <param name="accountSetting">Saved category.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Scrutz.Service.Communication.AccountSettingResponse.#ctor(System.String)">
            <summary>
            Creates am error response.
            </summary>
            <param name="message">Error message.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Scrutz.Service.Communication.CampaignResponse.#ctor(Scrutz.Model.Campaign)">
            <summary>
            Creates a success response.
            </summary>
            <param name="campaign">Saved category.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Scrutz.Service.Communication.CampaignResponse.#ctor(System.String)">
            <summary>
            Creates am error response.
            </summary>
            <param name="message">Error message.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Scrutz.Service.Communication.InfluencerResponse.#ctor(Scrutz.Model.Influencer)">
            <summary>
            Creates a success response.
            </summary>
            <param name="influencer">Saved category.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Scrutz.Service.Communication.InfluencerResponse.#ctor(System.String)">
            <summary>
            Creates am error response.
            </summary>
            <param name="message">Error message.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Scrutz.Service.Communication.TweetResponse.#ctor(Scrutz.Model.Tweetold)">
            <summary>
            Creates a success response.
            </summary>
            <param name="tweet">Saved category.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Scrutz.Service.Communication.TweetResponse.#ctor(System.String)">
            <summary>
            Creates am error response.
            </summary>
            <param name="message">Error message.</param>
            <returns>Response.</returns>
        </member>
    </members>
</doc>
